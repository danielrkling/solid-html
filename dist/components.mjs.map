{"version":3,"file":"components.mjs","names":["when: () => T","children: (item: Accessor<NonNullable<T>>)=>JSX.Element","fallback?: ()=>JSX.Element","_Show","children: ((item: NonNullable<T>) => JSX.Element)","children: ()=>JSX.Element[]","fallback: ()=>JSX.Element","_Switch","children: ((item: Accessor<NonNullable<T>>) => JSX.Element)","_Match","each: () => T | false | null | undefined","children: (item: T[number], index: () => number) => JSX.Element","_For","children: (item: () => T[number], index: number) => JSX.Element","_Index","children: ()=>JSX.Element","_Suspense","fallback: ((err: any, reset: () => void) => JSX.Element)","_ErrorBoundary","context: _Context<T>","value: T","children: () => JSX.Element"],"sources":["../src/components.ts"],"sourcesContent":["import {\n  type Context as _Context,\n  ErrorBoundary as _ErrorBoundary,\n  For as _For,\n  Index as _Index,\n  Match as _Match,\n  Show as _Show,\n  Suspense as _Suspense,\n  Switch as _Switch,\n  createComponent,\n  JSX,\n  Accessor,\n} from \"solid-js\";\n\n/**\n * Solid-compatible Show component. Renders children if `when` is truthy, otherwise renders `fallback`.\n * @example\n * Show(() => isVisible(), html`<span>Hello</span>`, \"Fallback\")\n */\nexport function Show<T>(\n  when: () => T,\n  children: (item: Accessor<NonNullable<T>>)=>JSX.Element,\n  fallback?: ()=>JSX.Element\n): JSX.Element {\n  return createComponent(_Show, {\n    get when() {\n      return when();\n    },\n    //@ts-expect-error\n    children,\n    get fallback(){\n      return fallback?.()\n    },\n    //@ts-expect-error\n    keyed: false,\n  });\n}\n\n\n\n/**\n * Show component with keyed mode. Renders children with keyed context if `when` is truthy.\n * @example\n * ShowKeyed(() => user(), user => html`<span>${user.name}</span>`, \"No user\")\n */\nexport function ShowKeyed<T>(\n  when: () => T,\n  children: ((item: NonNullable<T>) => JSX.Element),\n  fallback?: ()=>JSX.Element\n): JSX.Element {\n  return createComponent(_Show, {\n    get when() {\n      return when();\n    },\n    //@ts-expect-error\n    children,\n    get fallback(){\n      return fallback?.()\n    },\n    keyed: true,\n  });\n}\n\n/**\n * Switch component for conditional rendering. Renders the first matching child, or `fallback` if none match.\n * @example\n * Switch(\"No match\", Match(() => cond1(), html`A`), Match(() => cond2(), html`B`))\n */\nexport function Switch(\n  children: ()=>JSX.Element[],\n  fallback: ()=>JSX.Element,  \n): JSX.Element {\n  return createComponent(_Switch, {\n    get fallback() {\n      return fallback();\n    },\n    get children(){\n      return children()\n    }\n  });\n}\n\n/**\n * Match component for use inside Switch. Renders children if `when` is truthy.\n * @example\n * Match(() => value() === 1, html`One`)\n */\nexport function Match<T>(\n  when: () => T,\n  children: ((item: Accessor<NonNullable<T>>) => JSX.Element)\n): JSX.Element {\n  return createComponent(_Match, {\n    get when() {\n      return when();\n    },\n    //@ts-expect-error\n    children,\n  });\n}\n\n/**\n * Keyed Match component for use inside Switch. Renders children with keyed context if `when` is truthy.\n * @example\n * MatchKeyed(() => user(), user => html`<span>${user.name}</span>`)\n */\nexport function MatchKeyed<T>(\n  when: () => T,\n  children: ((item: NonNullable<T>) => JSX.Element)\n): JSX.Element {\n  return createComponent(_Match, {\n    get when() {\n      return when();\n    },\n    //@ts-expect-error\n    children,\n    keyed: true\n  });\n}\n\n/**\n * For component for iterating over arrays. Renders children for each item in `each`.\n * @example\n * For(() => items(), (item) => html`<li>${item}</li>`)\n */\nexport function For<T extends readonly any[]>(\n  each: () => T | false | null | undefined,\n  children: (item: T[number], index: () => number) => JSX.Element,\n  fallback?: ()=>JSX.Element\n): JSX.Element {\n  return createComponent(_For, {\n    get each() {\n      return each();\n    },\n    children,\n    get fallback() {\n      return fallback?.();\n    }\n  });\n}\n\n/**\n * Index component for iterating over arrays by index. Renders children for each item in `each`.\n * @example\n * Index(() => items(), (item, i) => html`<li>${item()}</li>`)\n */\nexport function Index<T extends readonly any[]>(\n  each: () => T | false | null | undefined,\n  children: (item: () => T[number], index: number) => JSX.Element,\n  fallback?: ()=>JSX.Element\n): JSX.Element {\n  return createComponent(_Index, {\n    get each() {\n      return each();\n    },\n    children,\n    get fallback() {\n      return fallback?.()\n    }\n  });\n}\n\n/**\n * Suspense component for async boundaries. Renders `children` or `fallback` while loading.\n * @example\n * Suspense(html`<div>Loaded</div>`, html`<div>Loading...</div>`)\n */\nexport function Suspense(\n  children: ()=>JSX.Element,\n  fallback?: ()=>JSX.Element\n): JSX.Element {\n  return createComponent(_Suspense, {\n    get children() {\n      return children()\n    },\n    get fallback() {\n      return fallback?.()\n    },\n  });\n}\n\n/**\n * ErrorBoundary component. Catches errors in children and renders `fallback` on error.\n * @example\n * ErrorBoundary(html`<App />`, (err) => html`<div>Error: ${err.message}</div>`)\n */\nexport function ErrorBoundary(\n  children: ()=>JSX.Element,\n  fallback: ((err: any, reset: () => void) => JSX.Element)\n): JSX.Element {\n  return createComponent(_ErrorBoundary, {\n    get children() {\n      return children()\n    },\n    fallback\n  });\n}\n\n/**\n * Context provider component. Provides a context value to all children.\n * @example\n * Context(MyContext, value, () => html`<Child />`)\n */\nexport function Context<T>(\n  context: _Context<T>,\n  value: T,\n  children: () => JSX.Element\n): JSX.Element {\n  return createComponent(context.Provider, {\n    get children() {\n      return children()\n    },\n    value\n  });\n}\n"],"mappings":"iIAmBA,SAAgB,EACdA,EACAC,EACAC,EACa,CACb,OAAO,EAAgBC,EAAO,CAC5B,IAAI,MAAO,CACT,OAAO,GAAM,AACd,EAED,WACA,IAAI,UAAU,CACZ,OAAO,KAAY,AACpB,EAED,MAAO,EACR,EAAC,AACH,CASD,SAAgB,EACdH,EACAI,EACAF,EACa,CACb,OAAO,EAAgBC,EAAO,CAC5B,IAAI,MAAO,CACT,OAAO,GAAM,AACd,EAED,WACA,IAAI,UAAU,CACZ,OAAO,KAAY,AACpB,EACD,MAAO,EACR,EAAC,AACH,CAOD,SAAgB,EACdE,EACAC,EACa,CACb,OAAO,EAAgBC,EAAS,CAC9B,IAAI,UAAW,CACb,OAAO,GAAU,AAClB,EACD,IAAI,UAAU,CACZ,OAAO,GAAU,AAClB,CACF,EAAC,AACH,CAOD,SAAgB,EACdP,EACAQ,EACa,CACb,OAAO,EAAgBC,EAAQ,CAC7B,IAAI,MAAO,CACT,OAAO,GAAM,AACd,EAED,UACD,EAAC,AACH,CAOD,SAAgB,EACdT,EACAI,EACa,CACb,OAAO,EAAgBK,EAAQ,CAC7B,IAAI,MAAO,CACT,OAAO,GAAM,AACd,EAED,WACA,MAAO,EACR,EAAC,AACH,CAOD,SAAgB,EACdC,EACAC,EACAT,EACa,CACb,OAAO,EAAgBU,EAAM,CAC3B,IAAI,MAAO,CACT,OAAO,GAAM,AACd,EACD,WACA,IAAI,UAAW,CACb,OAAO,KAAY,AACpB,CACF,EAAC,AACH,CAOD,SAAgB,EACdF,EACAG,EACAX,EACa,CACb,OAAO,EAAgBY,EAAQ,CAC7B,IAAI,MAAO,CACT,OAAO,GAAM,AACd,EACD,WACA,IAAI,UAAW,CACb,OAAO,KAAY,AACpB,CACF,EAAC,AACH,CAOD,SAAgB,EACdC,EACAb,EACa,CACb,OAAO,EAAgBc,EAAW,CAChC,IAAI,UAAW,CACb,OAAO,GAAU,AAClB,EACD,IAAI,UAAW,CACb,OAAO,KAAY,AACpB,CACF,EAAC,AACH,CAOD,SAAgB,EACdD,EACAE,EACa,CACb,OAAO,EAAgBC,EAAgB,CACrC,IAAI,UAAW,CACb,OAAO,GAAU,AAClB,EACD,UACD,EAAC,AACH,CAOD,SAAgB,EACdC,EACAC,EACAC,EACa,CACb,OAAO,EAAgB,EAAQ,SAAU,CACvC,IAAI,UAAW,CACb,OAAO,GAAU,AAClB,EACD,OACD,EAAC,AACH"}