{"version":3,"file":"index.mjs","names":["value: MaybeFunction<T>","when: () => boolean","children: MaybeFunction<JSX.Element>","fallback?: MaybeFunction<JSX.Element>","_Show","when: () => T","children: JSX.Element | ((item: NonNullable<T>) => JSX.Element)","fallback: MaybeFunction<JSX.Element>","_Switch","when: () => T | undefined | null | false","children: JSX.Element | ((item: T) => JSX.Element)","_Match","each: () => T | false | null | undefined","children: (item: T[number], index: () => number) => JSX.Element","_For","children: (item: () => T[number], index: number) => JSX.Element","_Index","_Suspense","fallback:\r\n    | MaybeFunction<JSX.Element>\r\n    | ((err: any, reset: () => void) => JSX.Element)","_ErrorBoundary","context: _Context<T>","value: T | (() => T)","children: () => JSX.Element","value: any","node: Element","name: string","value: any","prev?: any","namespace: string","rules: AssignmentRules","elem: Element","assign","props: any","prev: any","marker","strings: TemplateStringsArray","xml","arr: any","getValue","value: any","components: ComponentRegistry","rules: AssignmentRules","template: TemplateStringsArray","node: any","x: string","strings: TemplateStringsArray","type: ResultType","attrNames: Array<string>","html","rawTextEndRegex: RegExp | undefined","attrName: string | undefined","match!: RegExpExecArray | null","htmlResult: string","strings: TemplateStringsArray","type: ResultType","html","rules: AssignmentRules","value: any","strings","defaultRules: AssignmentRules","defaultComponents: ComponentRegistry","components: Record<string, any>","rules: AssignmentRules","h","component: T","props: MaybeFunctionProps<ComponentProps<T>>","components: Record<string, ValidComponent>","components","fn: T","props: TProps"],"sources":["../src/components.ts","../src/util.ts","../src/assign.ts","../src/xml.ts","../src/lit-html.ts","../src/html.ts","../src/defaults.ts","../src/h.ts"],"sourcesContent":["import {\r\n  type Context as _Context,\r\n  ErrorBoundary as _ErrorBoundary,\r\n  For as _For,\r\n  Index as _Index,\r\n  Match as _Match,\r\n  Show as _Show,\r\n  Suspense as _Suspense,\r\n  Switch as _Switch,\r\n  createComponent,\r\n  type JSX,\r\n} from \"solid-js\";\r\nimport { MaybeFunction } from \"./types\";\r\n\r\nexport function getValue<T>(value: MaybeFunction<T>): T {\r\n  if (typeof value === \"function\") {\r\n    //@ts-expect-error\r\n    return value();\r\n  }else{\r\n    return value;\r\n  }\r\n}\r\n\r\n/**\r\n * Solid-compatible Show component. Renders children if `when` is truthy, otherwise renders `fallback`.\r\n * @example\r\n * Show(() => isVisible(), html`<span>Hello</span>`, \"Fallback\")\r\n */\r\nexport function Show(\r\n  when: () => boolean,\r\n  children: MaybeFunction<JSX.Element>,\r\n  fallback?: MaybeFunction<JSX.Element>\r\n): JSX.Element {\r\n  return createComponent(_Show, {\r\n    get when() {\r\n      return when();\r\n    },\r\n    get children() {\r\n      return getValue(children);\r\n    },\r\n    get fallback() {\r\n      return getValue(fallback);\r\n    },\r\n    //@ts-expect-error\r\n    keyed: false,\r\n  });\r\n}\r\n\r\n/**\r\n * Show component with keyed mode. Renders children with keyed context if `when` is truthy.\r\n * @example\r\n * ShowKeyed(() => user(), user => html`<span>${user.name}</span>`, \"No user\")\r\n */\r\nexport function ShowKeyed<T>(\r\n  when: () => T,\r\n  children: JSX.Element | ((item: NonNullable<T>) => JSX.Element),\r\n  fallback?: MaybeFunction<JSX.Element>\r\n): JSX.Element {\r\n  return createComponent(_Show, {\r\n    get when() {\r\n      return when();\r\n    },\r\n    get children() {\r\n      //@ts-expect-error\r\n      return getValue(children);\r\n    },\r\n    get fallback() {\r\n      return getValue(fallback);\r\n    },\r\n    keyed: true,\r\n  });\r\n}\r\n\r\n/**\r\n * Switch component for conditional rendering. Renders the first matching child, or `fallback` if none match.\r\n * @example\r\n * Switch(\"No match\", Match(() => cond1(), html`A`), Match(() => cond2(), html`B`))\r\n */\r\nexport function Switch(\r\n  fallback: MaybeFunction<JSX.Element>,\r\n  ...children: JSX.Element[]\r\n): JSX.Element {\r\n  return createComponent(_Switch, {\r\n    get children() {\r\n      return getValue(children);\r\n    },\r\n    get fallback() {\r\n      return getValue(fallback);\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * Match component for use inside Switch. Renders children if `when` is truthy.\r\n * @example\r\n * Match(() => value() === 1, html`One`)\r\n */\r\nexport function Match<T>(\r\n  when: () => T | undefined | null | false,\r\n  children: JSX.Element | ((item: T) => JSX.Element)\r\n): JSX.Element {\r\n  return createComponent(_Match, {\r\n    get when() {\r\n      return when();\r\n    },\r\n    //@ts-expect-error\r\n    children,\r\n    //@ts-expect-error\r\n    keyed: false\r\n  });\r\n}\r\n\r\n/**\r\n * Keyed Match component for use inside Switch. Renders children with keyed context if `when` is truthy.\r\n * @example\r\n * MatchKeyed(() => user(), user => html`<span>${user.name}</span>`)\r\n */\r\nexport function MatchKeyed<T>(\r\n  when: () => T | undefined | null | false,\r\n  children: JSX.Element | ((item: T) => JSX.Element)\r\n): JSX.Element {\r\n  return createComponent(_Match, {\r\n    get when() {\r\n      return when();\r\n    },\r\n    //@ts-expect-error\r\n    children,\r\n    keyed: true\r\n  });\r\n}\r\n\r\n/**\r\n * For component for iterating over arrays. Renders children for each item in `each`.\r\n * @example\r\n * For(() => items(), (item) => html`<li>${item}</li>`)\r\n */\r\nexport function For<T extends readonly any[]>(\r\n  each: () => T | false | null | undefined,\r\n  children: (item: T[number], index: () => number) => JSX.Element,\r\n  fallback?: MaybeFunction<JSX.Element>\r\n): JSX.Element {\r\n  return createComponent(_For, {\r\n    get each() {\r\n      return each();\r\n    },\r\n    children,\r\n    get fallback() {\r\n      return getValue(fallback);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Index component for iterating over arrays by index. Renders children for each item in `each`.\r\n * @example\r\n * Index(() => items(), (item, i) => html`<li>${item()}</li>`)\r\n */\r\nexport function Index<T extends readonly any[]>(\r\n  each: () => T | false | null | undefined,\r\n  children: (item: () => T[number], index: number) => JSX.Element,\r\n  fallback?: MaybeFunction<JSX.Element>\r\n): JSX.Element {\r\n  return createComponent(_Index, {\r\n    get each() {\r\n      return each();\r\n    },\r\n    children,\r\n    get fallback() {\r\n      return getValue(fallback);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Suspense component for async boundaries. Renders `children` or `fallback` while loading.\r\n * @example\r\n * Suspense(html`<div>Loaded</div>`, html`<div>Loading...</div>`)\r\n */\r\nexport function Suspense(\r\n  children: MaybeFunction<JSX.Element>,\r\n  fallback?: MaybeFunction<JSX.Element>\r\n): JSX.Element {\r\n  return createComponent(_Suspense, {\r\n    get children() {\r\n      return getValue(children);\r\n    },\r\n    get fallback() {\r\n      return getValue(fallback);\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * ErrorBoundary component. Catches errors in children and renders `fallback` on error.\r\n * @example\r\n * ErrorBoundary(html`<App />`, (err) => html`<div>Error: ${err.message}</div>`)\r\n */\r\nexport function ErrorBoundary(\r\n  children: MaybeFunction<JSX.Element>,\r\n  fallback:\r\n    | MaybeFunction<JSX.Element>\r\n    | ((err: any, reset: () => void) => JSX.Element)\r\n): JSX.Element {\r\n  return createComponent(_ErrorBoundary, {\r\n    get children() {\r\n      return getValue(children);\r\n    },\r\n    get fallback() {\r\n      return getValue(fallback);\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * Context provider component. Provides a context value to all children.\r\n * @example\r\n * Context(MyContext, value, () => html`<Child />`)\r\n */\r\nexport function Context<T>(\r\n  context: _Context<T>,\r\n  value: T | (() => T),\r\n  children: () => JSX.Element\r\n): JSX.Element {\r\n  return createComponent(context.Provider, {\r\n    get children() {\r\n      return getValue(children);\r\n    },\r\n    get value() {\r\n      return getValue(value);\r\n    },\r\n  });\r\n}\r\n","import { MaybeFunction } from \"./types\";\r\n\r\nexport function isString(value: any): value is string {\r\n  return typeof value === \"string\";\r\n}\r\n\r\nexport function isFunction(value: any): value is Function {\r\n  return typeof value === \"function\";\r\n}\r\n\r\nexport function isArray(value: any): value is any[] {\r\n  return Array.isArray(value);\r\n}\r\n\r\n\r\nexport const doc = document\r\n\r\n","import {\r\n  addEventListener,\r\n  DelegatedEvents,\r\n  delegateEvents,\r\n  effect,\r\n  insert,\r\n} from \"solid-js/web\";\r\nimport { isFunction, isString } from \"./util\";\r\nimport { AssignmentRules } from \"./types\";\r\n\r\n\r\n\r\n\r\nexport function assignEvent(\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  prev && node.removeEventListener(name, prev);\r\n  value && node.addEventListener(name, value);\r\n  return value;\r\n}\r\n\r\nexport function assignDelegatedEvent(\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  name = name.toLowerCase()\r\n  let delegate = DelegatedEvents.has(name);\r\n  addEventListener(node, name, value, delegate);\r\n  if (delegate) delegateEvents([name]);\r\n  return value;\r\n}\r\n\r\nexport function assignProperty(\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  (node as any)[name] = value;\r\n  return value;\r\n}\r\n\r\nexport function assignBooleanAttribute(\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  if (value) {\r\n    node.setAttribute(name, \"\");\r\n  } else {\r\n    node.removeAttribute(name);\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function assignAttribute(\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  if (value === null || value === undefined) {\r\n    node.removeAttribute(name);\r\n    return value;\r\n  }\r\n  node.setAttribute(name, value);\r\n  return value;\r\n}\r\n\r\nexport function assignAttributeNS(\r\n  namespace: string,\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any,\r\n) {\r\n  if (value === null || value === undefined) {\r\n    node.removeAttributeNS(namespace, name);\r\n    return value;\r\n  }\r\n  node.setAttributeNS(namespace, name, value);\r\n  return value;\r\n}\r\n\r\nexport function assignClass(\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  node.classList.toggle(name, !!value);\r\n  return value;\r\n}\r\n\r\nexport function assignStyle(\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  (node as HTMLElement).style[name as any] = value ? value : \"\";\r\n  return value;\r\n}\r\n\r\n\r\nexport function assignRef(node: Element, name: string, value: any, prev?: any) {\r\n  if (isFunction(value)) {\r\n    value(node);\r\n  }\r\n}\r\n\r\nexport function assign(\r\n  rules: AssignmentRules,\r\n  elem: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  if (value === prev) return value;\r\n  if (name === \"children\") {\r\n    return insert(elem, value);\r\n  }\r\n\r\n  for (const rule of rules) {\r\n    const { filter, assign, isReactive = true } = rule;\r\n    if (isString(filter) && name.startsWith(filter)) {\r\n      name = name.slice(filter.length);\r\n    } else if (isFunction(filter)) {\r\n      name = filter(elem, name, value, prev);\r\n    } else {\r\n      continue;\r\n    }\r\n    if (name) {\r\n      if (isFunction(value) && isReactive) {\r\n        effect(() => (prev = assign(elem, name, value(), prev)));\r\n      } else {\r\n        assign(elem, name, value, prev);\r\n      }\r\n      return prev;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function spread(\r\n  rules: AssignmentRules,\r\n  elem: Element,\r\n  props: any,\r\n  prev: any = {}\r\n) {\r\n\r\n  if (isFunction(props)) {\r\n    effect(() => {\r\n      for (const [name, value] of Object.entries(props())) {\r\n        prev[name] = assign(rules, elem, name, value, prev[name]);\r\n      }\r\n    });\r\n  } else {\r\n    for (const [name, value] of Object.entries(props)) {\r\n      prev[name] = assign(rules, elem, name, value, prev[name]);\r\n    }\r\n  }\r\n  return prev;\r\n}\r\n\r\n","\r\n\r\nimport { H } from \"./h\";\r\nimport { AssignmentRules, ComponentRegistry } from \"./types\";\r\nimport { doc, isFunction } from \"./util\";\r\n\r\n\r\nconst xmlns = [\"on\", \"prop\", \"bool\", \"attr\", \"ref\", \"style\", \"class\", \"xlink\",]\r\n  .map((ns) => `xmlns:${ns}=\"/\"`)\r\n  .join(\" \");\r\n\r\nconst marker = \"MARKER46846\";\r\nconst markerRX = new RegExp(`(${marker})`, \"g\");\r\nconst markerAttr = new RegExp(`=${marker}`, \"g\");\r\n\r\nconst xmlCache = new WeakMap<TemplateStringsArray, Node>();\r\n\r\n/**\r\n * Parses a template string as XML and returns the child nodes, using a cache for performance.\r\n * @internal\r\n */\r\nfunction getXml(strings: TemplateStringsArray) {\r\n  let xml = xmlCache.get(strings);\r\n  if (xml === undefined) {\r\n    const contents = strings.join(marker).replace(markerAttr, `=\"${marker}\"`);\r\n    const parser = new DOMParser();\r\n    xml = parser.parseFromString(`<xml ${xmlns}>${contents}</xml>`, \"text/xml\")\r\n      .firstChild!;\r\n    xmlCache.set(strings, xml);\r\n  }\r\n  return xml.childNodes;\r\n}\r\n\r\nconst flat = (arr: any) => (arr.length === 1 ? arr[0] : arr);\r\nfunction getValue(value: any) {\r\n  while (isFunction(value)) value = value();\r\n  return value;\r\n}\r\nconst toArray = Array.from;\r\n\r\n\r\n\r\nexport function XML(components: ComponentRegistry = {}, rules: AssignmentRules = []) {\r\n  function xml(template: TemplateStringsArray, ...values: any[]) {\r\n    const cached = getXml(template);\r\n    let index = 0;\r\n\r\n    function nodes(node: any) {\r\n      // console.log(node)\r\n      if (node.nodeType === 1) {\r\n        // element\r\n        const tagName = node.tagName;\r\n\r\n        // gather props\r\n        const props = {} as Record<string, any>;\r\n        for (let { name, value } of node.attributes) {\r\n\r\n          if (value === marker) {\r\n            value = values[index++];\r\n          } else if (value.includes(marker)) {\r\n            const val = value\r\n              .split(markerRX)\r\n              .map((x: string) => (x === marker ? values[index++] : x));\r\n\r\n            value = () => val.map(getValue).join(\"\");\r\n          }\r\n          props[name] = value;\r\n        }\r\n\r\n        // gather children\r\n        const childNodes = node.childNodes;\r\n        if (childNodes.length) {\r\n          Object.defineProperty(props, \"children\", {\r\n            get() {\r\n              return flat(\r\n                toArray(childNodes)\r\n                  .map(nodes)\r\n                  .filter((n) => n)\r\n              );\r\n            },\r\n            enumerable: true,\r\n          });\r\n        }\r\n\r\n        return xml.h(tagName, props);\r\n      } else if (node.nodeType === 3) {\r\n        // text\r\n\r\n        const value = node.nodeValue;\r\n        if (value.trim() === marker) {\r\n          return values[index++];\r\n        }\r\n        return value.includes(marker)\r\n          ? value\r\n            .split(markerRX)\r\n            .map((x: string) => (x === marker ? values[index++] : x))\r\n          : value;\r\n      } else if (node.nodeType === 8) {\r\n        // comment\r\n        const value = node.nodeValue;\r\n        if (value.includes(marker)) {\r\n          const val = value\r\n            .split(markerRX)\r\n            .map((x: string) => (x === marker ? values[index++] : x));\r\n          return () => doc.createComment(val.map(getValue).join(\"\"));\r\n        } else {\r\n          return doc.createComment(value);\r\n        }\r\n      } else {\r\n        console.error(`xml: nodeType not supported ${node.nodeType}`);\r\n      }\r\n    }\r\n\r\n    return flat(toArray(cached).map(nodes));\r\n  }\r\n\r\n  xml.h = H(components, rules);\r\n\r\n  return xml;\r\n}\r\n","// Added to an attribute name to mark the attribute as bound so we can find\r\n// it easily.\r\nexport const boundAttributeSuffix = \"$lit$\";\r\n\r\n// This marker is used in many syntactic positions in HTML, so it must be\r\n// a valid element name and attribute name. We don't support dynamic names (yet)\r\n// but this at least ensures that the parse tree is closer to the template\r\n// intention.\r\nexport const marker = `lit$marker$`;\r\n\r\n// String used to tell if a comment is a marker comment\r\nexport const markerMatch = \"?\" + marker;\r\n\r\n// Text used to insert a comment marker node. We use processing instruction\r\n// syntax because it's slightly smaller, but parses as a comment node.\r\nexport const nodeMarker = `<${markerMatch}>`;\r\n\r\n\r\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\r\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\r\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\r\n\r\n// These regexes represent the five parsing states that we care about in the\r\n// Template's HTML scanner. They match the *end* of the state they're named\r\n// after.\r\n// Depending on the match, we transition to a new state. If there's no match,\r\n// we stay in the same state.\r\n// Note that the regexes are stateful. We utilize lastIndex and sync it\r\n// across the multiple regexes used. In addition to the five regexes below\r\n// we also dynamically create a regex to find the matching end tags for raw\r\n// text elements.\r\n\r\n/**\r\n * End of text is: `<` followed by:\r\n *   (comment start) or (tag) or (dynamic tag binding)\r\n */\r\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\r\nconst COMMENT_START = 1;\r\nconst TAG_NAME = 2;\r\nconst DYNAMIC_TAG_NAME = 3;\r\n\r\nconst commentEndRegex = /-->/g;\r\n/**\r\n * Comments not started with <!--, like </{, can be ended by a single `>`\r\n */\r\nconst comment2EndRegex = />/g;\r\n\r\n/**\r\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\r\n * position. It either matches a `>`, an attribute-like sequence, or the end\r\n * of the string after a space (attribute-name position ending).\r\n *\r\n * See attributes in the HTML spec:\r\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\r\n *\r\n * \" \\t\\n\\f\\r\" are HTML space characters:\r\n * https://infra.spec.whatwg.org/#ascii-whitespace\r\n *\r\n * So an attribute is:\r\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\r\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\r\n *  * Followed by zero or more space characters\r\n *  * Followed by \"=\"\r\n *  * Followed by zero or more space characters\r\n *  * Followed by:\r\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\r\n *    * (\") then any non-(\"), or\r\n *    * (') then any non-(')\r\n */\r\nconst tagEndRegex = new RegExp(\r\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\r\n  \"g\"\r\n);\r\nconst ENTIRE_MATCH = 0;\r\nconst ATTRIBUTE_NAME = 1;\r\nconst SPACES_AND_EQUALS = 2;\r\nconst QUOTE_CHAR = 3;\r\n\r\nconst singleQuoteAttrEndRegex = /'/g;\r\nconst doubleQuoteAttrEndRegex = /\"/g;\r\n/**\r\n * Matches the raw text elements.\r\n *\r\n * Comments are not parsed within raw text elements, so we need to search their\r\n * text content for marker strings.\r\n */\r\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\r\n\r\n/** TemplateResult types */\r\nexport const HTML_RESULT = 1;\r\nexport const SVG_RESULT = 2;\r\nexport const MATHML_RESULT = 3;\r\n\r\nexport type ResultType = typeof HTML_RESULT | typeof SVG_RESULT | typeof MATHML_RESULT;\r\n\r\n\r\n\r\n/**\r\n * Returns an HTML string for the given TemplateStringsArray and result type\r\n * (HTML or SVG), along with the case-sensitive bound attribute names in\r\n * template order. The HTML contains comment markers denoting the `ChildPart`s\r\n * and suffixes on bound attributes denoting the `AttributeParts`.\r\n *\r\n * @param strings template strings array\r\n * @param type HTML or SVG\r\n * @return Array containing `[html, attrNames]` (array returned for terseness,\r\n *     to avoid object fields since this code is shared with non-minified SSR\r\n *     code)\r\n */\r\nexport const getTemplateHtml = (\r\n  strings: TemplateStringsArray,\r\n  type: ResultType\r\n): [string, Array<string>] => {\r\n  // Insert makers into the template HTML to represent the position of\r\n  // bindings. The following code scans the template strings to determine the\r\n  // syntactic position of the bindings. They can be in text position, where\r\n  // we insert an HTML comment, attribute value position, where we insert a\r\n  // sentinel string and re-write the attribute name, or inside a tag where\r\n  // we insert the sentinel string.\r\n  const l = strings.length - 1;\r\n  // Stores the case-sensitive bound attribute names in the order of their\r\n  // parts. ElementParts are also reflected in this array as undefined\r\n  // rather than a string, to disambiguate from attribute bindings.\r\n  const attrNames: Array<string> = [];\r\n  let html =\r\n    type === SVG_RESULT ? \"<svg>\" : type === MATHML_RESULT ? \"<math>\" : \"\";\r\n\r\n  // When we're inside a raw text tag (not it's text content), the regex\r\n  // will still be tagRegex so we can find attributes, but will switch to\r\n  // this regex when the tag ends.\r\n  let rawTextEndRegex: RegExp | undefined;\r\n\r\n  // The current parsing state, represented as a reference to one of the\r\n  // regexes\r\n  let regex = textEndRegex;\r\n\r\n  for (let i = 0; i < l; i++) {\r\n    const s = strings[i];\r\n    // The index of the end of the last attribute name. When this is\r\n    // positive at end of a string, it means we're in an attribute value\r\n    // position and need to rewrite the attribute name.\r\n    // We also use a special value of -2 to indicate that we encountered\r\n    // the end of a string in attribute name position.\r\n    let attrNameEndIndex = -1;\r\n    let attrName: string | undefined;\r\n    let lastIndex = 0;\r\n    let match!: RegExpExecArray | null;\r\n\r\n    // The conditions in this loop handle the current parse state, and the\r\n    // assignments to the `regex` variable are the state transitions.\r\n    while (lastIndex < s.length) {\r\n      // Make sure we start searching from where we previously left off\r\n      regex.lastIndex = lastIndex;\r\n      match = regex.exec(s);\r\n      if (match === null) {\r\n        break;\r\n      }\r\n      lastIndex = regex.lastIndex;\r\n      if (regex === textEndRegex) {\r\n        if (match[COMMENT_START] === \"!--\") {\r\n          regex = commentEndRegex;\r\n        } else if (match[COMMENT_START] !== undefined) {\r\n          // We started a weird comment, like </{\r\n          regex = comment2EndRegex;\r\n        } else if (match[TAG_NAME] !== undefined) {\r\n          if (rawTextElement.test(match[TAG_NAME])) {\r\n            // Record if we encounter a raw-text element. We'll switch to\r\n            // this regex at the end of the tag.\r\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, \"g\");\r\n          }\r\n          regex = tagEndRegex;\r\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\r\n          regex = tagEndRegex;\r\n        }\r\n      } else if (regex === tagEndRegex) {\r\n        if (match[ENTIRE_MATCH] === \">\") {\r\n          // End of a tag. If we had started a raw-text element, use that\r\n          // regex\r\n          regex = rawTextEndRegex ?? textEndRegex;\r\n          // We may be ending an unquoted attribute value, so make sure we\r\n          // clear any pending attrNameEndIndex\r\n          attrNameEndIndex = -1;\r\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\r\n          // Attribute name position\r\n          attrNameEndIndex = -2;\r\n        } else {\r\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\r\n          attrName = match[ATTRIBUTE_NAME];\r\n          regex =\r\n            match[QUOTE_CHAR] === undefined\r\n              ? tagEndRegex\r\n              : match[QUOTE_CHAR] === '\"'\r\n              ? doubleQuoteAttrEndRegex\r\n              : singleQuoteAttrEndRegex;\r\n        }\r\n      } else if (\r\n        regex === doubleQuoteAttrEndRegex ||\r\n        regex === singleQuoteAttrEndRegex\r\n      ) {\r\n        regex = tagEndRegex;\r\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\r\n        regex = textEndRegex;\r\n      } else {\r\n        // Not one of the five state regexes, so it must be the dynamically\r\n        // created raw text regex and we're at the close of that element.\r\n        regex = tagEndRegex;\r\n        rawTextEndRegex = undefined;\r\n      }\r\n    }\r\n\r\n    // We have four cases:\r\n    //  1. We're in text position, and not in a raw text element\r\n    //     (regex === textEndRegex): insert a comment marker.\r\n    //  2. We have a non-negative attrNameEndIndex which means we need to\r\n    //     rewrite the attribute name to add a bound attribute suffix.\r\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\r\n    //     plain marker.\r\n    //  4. We're somewhere else inside the tag. If we're in attribute name\r\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\r\n    //     generate a unique attribute name.\r\n\r\n    // Detect a binding next to self-closing tag end and insert a space to\r\n    // separate the marker from the tag end:\r\n    const end =\r\n      regex === tagEndRegex && strings[i + 1].startsWith(\"/>\") ? \" \" : \"\";\r\n    html +=\r\n      regex === textEndRegex\r\n        ? s + nodeMarker\r\n        : attrNameEndIndex >= 0\r\n        ? (attrNames.push(attrName!),\r\n          s.slice(0, attrNameEndIndex) +\r\n            boundAttributeSuffix +\r\n            s.slice(attrNameEndIndex)) +\r\n          marker +\r\n          end\r\n        : s + marker + (attrNameEndIndex === -2 ? i : end);\r\n  }\r\n\r\n  const htmlResult: string =\r\n    html +\r\n    (strings[l] || \"<?>\") +\r\n    (type === SVG_RESULT ? \"</svg>\" : type === MATHML_RESULT ? \"</math>\" : \"\");\r\n\r\n  // Returned as an array for terseness\r\n  return [htmlResult, attrNames];\r\n};\r\n","import { type JSX } from \"solid-js\";\r\nimport {\r\n  effect,\r\n  insert,\r\n  SVGElements\r\n} from \"solid-js/web\";\r\n\r\nimport {\r\n  boundAttributeSuffix,\r\n  getTemplateHtml,\r\n  HTML_RESULT,\r\n  marker,\r\n  markerMatch,\r\n  MATHML_RESULT,\r\n  ResultType,\r\n  SVG_RESULT,\r\n} from \"./lit-html\";\r\nimport { doc, isFunction } from \"./util\";\r\nimport { AssignmentRules } from \"./types\";\r\nimport { assign, spread } from \"./assign\";\r\nimport { defaultRules } from \"./defaults\";\r\n\r\n\r\n\r\ntype Template = [element: HTMLTemplateElement, attributes: string[]];\r\n\r\nconst walker = doc.createTreeWalker(doc, 129);\r\n\r\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\r\n\r\n/**\r\n * Returns a parsed template and its bound attributes for a given template string and type.\r\n * @internal\r\n */\r\nfunction getTemplate(\r\n  strings: TemplateStringsArray,\r\n  type: ResultType\r\n): Template {\r\n  let template = templateCache.get(strings);\r\n  if (template === undefined) {\r\n    const [html, attributes] = getTemplateHtml(strings, type);\r\n    const element = doc.createElement(\"template\");\r\n    element.innerHTML = html;\r\n    template = [element, attributes];\r\n    templateCache.set(strings, template);\r\n  }\r\n  return template;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Creates a tagged template function for html/svg/mathml templates with Solid reactivity.\r\n * @internal\r\n */\r\nexport function HTML(type: ResultType = 1, rules: AssignmentRules = []) {\r\n  function html(\r\n    strings: TemplateStringsArray,\r\n    ...values: any[]\r\n  ): JSX.Element {\r\n\r\n    const [element, attributes] = getTemplate(strings, type);\r\n    const clone = element.content.cloneNode(true);\r\n\r\n    let valueIndex = 0;\r\n    let boundAttributeIndex = 0;\r\n    walker.currentNode = clone;\r\n\r\n    while (walker.nextNode()) {\r\n      const node = walker.currentNode;\r\n      if (node.nodeType === 1) {\r\n        for (const attr of [...(node as Element).attributes]) {\r\n          if (attr.name.endsWith(boundAttributeSuffix)) {\r\n            //Bound attribute/prop/event\r\n            let value: any\r\n            if (attr.value === marker) {\r\n              value = values[valueIndex++];\r\n            } else {\r\n              const strings = attr.value.split(marker);\r\n              let parts = [strings[0]] as any[];\r\n              for (let j = 1; j < strings.length; j++) {\r\n                parts.push(values[valueIndex++], strings[j]);\r\n              }\r\n              value = () => parts.map((v) => (isFunction(v) ? v() : v)).join(\"\");\r\n\r\n            }\r\n            assign(html.rules, node as Element, attributes[boundAttributeIndex++], value);\r\n            (node as Element).removeAttribute(attr.name);\r\n          } else if (attr.name === `...${marker}`) {\r\n            //Spread\r\n            const isSvg = SVGElements.has((node as Element).tagName);\r\n            const value = values[valueIndex++];\r\n            if (isFunction(value)) {\r\n              effect(() => spread(html.rules, node as Element, value()));\r\n            } else {\r\n              spread(html.rules, node as Element, value);\r\n            }\r\n            (node as Element).removeAttribute(attr.name);\r\n          } else if (attr.name.startsWith(marker)) {\r\n            //Refs\r\n            const value = values[valueIndex++];\r\n            if (isFunction(value)) {\r\n              value(node as Element);\r\n            }\r\n            (node as Element).removeAttribute(attr.name);\r\n          }\r\n        }\r\n      } else if (node.nodeType === 8) {\r\n        if (node.nodeValue === markerMatch) {\r\n          node.nodeValue = marker + valueIndex; //I don't know why, but this prevents misplaced elements\r\n          const value = values[valueIndex++];\r\n          const parent = node.parentNode;\r\n          if (parent) insert(parent, value, node);\r\n        }\r\n      }\r\n    }\r\n    if (type === SVG_RESULT || type === MATHML_RESULT) {\r\n      return [...clone.firstChild!.childNodes];\r\n    }\r\n    return [...clone.childNodes];\r\n  }\r\n\r\n\r\n  html.rules = [...rules, ...defaultRules];\r\n\r\n  return html;\r\n}\r\n\r\n","import {\r\n  Dynamic,\r\n  ErrorBoundary,\r\n  For,\r\n  Index,\r\n  Match,\r\n  NoHydration,\r\n  Portal,\r\n  Show,\r\n  Suspense,\r\n  Switch,\r\n} from \"solid-js/web\";\r\nimport {\r\n  assignAttribute,\r\n  assignAttributeNS,\r\n  assignBooleanAttribute,\r\n  assignClass,\r\n  assignDelegatedEvent,\r\n  assignEvent,\r\n\r\n  assignProperty,\r\n  assignRef,\r\n  assignStyle,\r\n} from \"./assign\";\r\nimport { H } from \"./h\";\r\nimport { XML } from \"./xml\";\r\nimport { HTML } from \"./html\";\r\nimport { HTML_RESULT, SVG_RESULT, MATHML_RESULT } from \"./lit-html\";\r\nimport { ValidComponent } from \"solid-js\";\r\nimport { AssignmentRules, ComponentRegistry } from \"./types\";\r\n\r\n\r\nexport const defaultRules: AssignmentRules = [\r\n  { filter: \"on:\", assign: assignEvent, isReactive: false },\r\n  { filter: \"on\", assign: assignDelegatedEvent, isReactive: false },\r\n  { filter: \"prop:\", assign: assignProperty },\r\n  { filter: \"bool:\", assign: assignBooleanAttribute },\r\n  { filter: \"attr:\", assign: assignAttribute },\r\n  { filter: \"ref:\", assign: assignRef, isReactive: false },\r\n  { filter: \"class:\", assign: assignClass },\r\n  { filter: \"style:\", assign: assignStyle },\r\n  { filter: \"@\", assign: assignDelegatedEvent, isReactive: false },\r\n  { filter: \".\", assign: assignProperty },\r\n  { filter: \"?\", assign: assignBooleanAttribute },\r\n  { filter: \"\", assign: assignAttribute }\r\n]\r\n\r\n\r\n\r\nexport const defaultComponents: ComponentRegistry = {\r\n  For,\r\n  Index,\r\n  Match,\r\n  Suspense,\r\n  ErrorBoundary,\r\n  Show,\r\n  Switch,\r\n  Dynamic,\r\n  Portal,\r\n  NoHydration,\r\n}\r\n\r\n\r\nexport const h = H();\r\n\r\nexport const xml = XML()\r\n\r\nexport const html = HTML(HTML_RESULT);\r\n\r\nexport const svg = HTML(SVG_RESULT);\r\n\r\nexport const mathml = HTML(MATHML_RESULT);\r\n","import {\r\n  createComponent,\r\n  type ComponentProps,\r\n  type JSX,\r\n  type ValidComponent,\r\n} from \"solid-js\";\r\n\r\nimport { spread } from \"./assign\";\r\nimport { defaultComponents, defaultRules } from \"./defaults\";\r\n\r\nimport { doc, isFunction, isString } from \"./util\";\r\nimport { SVGElements } from \"solid-js/web\";\r\nimport { AssignmentRules, MaybeFunctionProps } from \"./types\";\r\n\r\n\r\n\r\nexport function H(components: Record<string, any> = {}, rules: AssignmentRules = []) {\r\n\r\n  function h<T extends ValidComponent>(\r\n    component: T,\r\n    props: MaybeFunctionProps<ComponentProps<T>>,\r\n    ...children: JSX.Element[]\r\n  ): JSX.Element {\r\n    //children in spread syntax override children in props\r\n    if (children.length === 1) {\r\n      //@ts-expect-error\r\n      props.children = children[0];\r\n    } else if (children.length > 1) {\r\n      //@ts-expect-error\r\n      props.children = children;\r\n    }\r\n\r\n    if (isString(component)) {\r\n      if (/[A-Z]/.test(component)) {\r\n        const componentFunction = (h.components)[component];\r\n        if (componentFunction) {\r\n          return createComponent(componentFunction, wrapProps(props));\r\n        }\r\n        console.warn(`Forgot to define ${componentFunction}`);\r\n      }\r\n\r\n      const elem = SVGElements.has(component) ? doc.createElementNS(\"http://www.w3.org/2000/svg\", component) : doc.createElement(component);\r\n      spread(h.rules, elem, props);\r\n      return elem;\r\n    } else if (isFunction(component)) {\r\n      return createComponent(component, wrapProps(props));\r\n    }\r\n  }\r\n  h.components = {...defaultComponents, ...components};\r\n  h.define = (components: Record<string, ValidComponent>) => {\r\n    Object.assign(h.components, components);\r\n  };\r\n  h.rules = [...rules, ...defaultRules];\r\n\r\n\r\n  return h;\r\n\r\n}\r\n\r\n\r\nexport const markedOnce = new WeakSet();\r\n\r\n/**\r\n * Marks a function so it is not wrapped as a getter by h().\r\n * Useful for event handlers or functions that should not be auto-accessed.\r\n * @example\r\n * once(() => doSomething())\r\n */\r\nexport function once<T extends (...args: any[]) => any>(fn: T): T {\r\n  if (isFunction(fn)) markedOnce.add(fn);\r\n  return fn;\r\n}\r\n\r\n/**\r\n * Internal: Replaces accessor props with getters for reactivity, except for refs and event handlers.\r\n */\r\nfunction wrapProps<\r\n  TComponent extends ValidComponent,\r\n  TProps extends MaybeFunctionProps<ComponentProps<TComponent>>\r\n>(props: TProps = {} as TProps): ComponentProps<TComponent> {\r\n  for (const [key, descriptor] of Object.entries(\r\n    Object.getOwnPropertyDescriptors(props)\r\n  )) {\r\n    const value = descriptor.value;\r\n    if (isFunction(value) && value.length === 0 && !markedOnce.has(value)) {\r\n      Object.defineProperty(props, key, {\r\n        get() {\r\n          return value();\r\n        },\r\n        enumerable: true,\r\n      });\r\n    }\r\n  }\r\n  return props as ComponentProps<TComponent>;\r\n}\r\n"],"mappings":"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"}