{"version":3,"file":"index.mjs","names":["value: any","data:string","tag: string","arr: any[]","node: Element","name: string","value: any","prev?: any","namespace: string","rules: AssignmentRule[]","elem: Element","assign","props: any","prev: any","strings: TemplateStringsArray","components: ComponentRegistry","rules: AssignmentRule[]","html","template: HTMLTemplateElement","componentNode: ComponentNode | RootNode","nodes: TreeNode[]","node: TreeNode","value: string","node: INode","parent: Node","defaultRules: AssignmentRule[]","defaultComponents: ComponentRegistry","components: Record<string, any>","rules: AssignmentRule[]","h","component: T","props: MaybeFunctionProps<ComponentProps<T>>","components: Record<string, ValidComponent>","components","fn: T","props: TProps"],"sources":["../src/util.ts","../src/assign.ts","../src/html.ts","../src/defaults.ts","../src/h.ts"],"sourcesContent":["import { SVGElements } from \"solid-js/web\";\r\nimport { MaybeFunction } from \"./types\";\r\n\r\nexport function isString(value: any): value is string {\r\n  return typeof value === \"string\";\r\n}\r\n\r\nexport function isNumber(value: any): value is number {\r\n  return typeof value === \"number\";\r\n}\r\n\r\nexport function isFunction(value: any): value is Function {\r\n  return typeof value === \"function\";\r\n}\r\n\r\nexport function isArray(value: any): value is any[] {\r\n  return Array.isArray(value);\r\n}\r\n\r\nexport const toArray = Array.from;\r\n\r\n\r\nexport const doc = document\r\n\r\nexport const createComment = (data:string)=>doc.createComment(data)\r\n\r\nexport function createElement(tag: string){\r\n  return SVGElements.has(tag) ? doc.createElementNS(\"http://www.w3.org/2000/svg\", tag) : doc.createElement(tag)\r\n}\r\n\r\nexport function flat(arr: any[]) {\r\n  return (arr.length === 1 ? arr[0] : arr);\r\n}\r\n\r\nexport function getValue(value: any) {\r\n  while (isFunction(value)) value = value();\r\n  return value;\r\n}","import {\r\n  addEventListener,\r\n  DelegatedEvents,\r\n  delegateEvents,\r\n  effect,\r\n  insert,\r\n} from \"solid-js/web\";\r\nimport { isFunction, isString } from \"./util\";\r\nimport { AssignmentRule } from \"./types\";\r\n\r\n\r\n\r\n\r\nexport function assignEvent(\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  prev && node.removeEventListener(name, prev);\r\n  value && node.addEventListener(name, value);\r\n  return value;\r\n}\r\n\r\nexport function assignDelegatedEvent(\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  name = name.toLowerCase()\r\n  let delegate = DelegatedEvents.has(name);\r\n  addEventListener(node, name, value, delegate);\r\n  if (delegate) delegateEvents([name]);\r\n  return value;\r\n}\r\n\r\nexport function assignProperty(\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  (node as any)[name] = value;\r\n  return value;\r\n}\r\n\r\nexport function assignBooleanAttribute(\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  if (value) {\r\n    node.setAttribute(name, \"\");\r\n  } else {\r\n    node.removeAttribute(name);\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function assignAttribute(\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  if (value === null || value === undefined) {\r\n    node.removeAttribute(name);\r\n    return value;\r\n  }\r\n  node.setAttribute(name, value);\r\n  return value;\r\n}\r\n\r\nexport function assignAttributeNS(\r\n  namespace: string,\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any,\r\n) {\r\n  if (value === null || value === undefined) {\r\n    node.removeAttributeNS(namespace, name);\r\n    return value;\r\n  }\r\n  node.setAttributeNS(namespace, name, value);\r\n  return value;\r\n}\r\n\r\nexport function assignClass(\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  node.classList.toggle(name, !!value);\r\n  return value;\r\n}\r\n\r\nexport function assignStyle(\r\n  node: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  (node as HTMLElement).style[name as any] = value ? value : \"\";\r\n  return value;\r\n}\r\n\r\n\r\nexport function assignRef(node: Element, name: string, value: any, prev?: any) {\r\n  if (isFunction(value)) {\r\n    value(node);\r\n  }\r\n}\r\n\r\nexport function assign(\r\n  rules: AssignmentRule[],\r\n  elem: Element,\r\n  name: string,\r\n  value: any,\r\n  prev?: any\r\n) {\r\n  if (value === prev) return value;\r\n  //special cases\r\n  if (name === \"children\") {\r\n    return insert(elem, value);\r\n  } else   if (name === \"ref\"){\r\n    return assignRef(elem, name, value, prev);\r\n  } else if (name === \"...\"){\r\n    return spread(rules, elem, value, prev);\r\n  }\r\n\r\n  for (const rule of rules) {\r\n    const { filter, assign, isReactive = true } = rule;\r\n    if (isString(filter) && name.startsWith(filter)) {\r\n      name = name.slice(filter.length);\r\n    } else if (isFunction(filter)) {\r\n      name = filter(elem, name, value, prev);\r\n    } else {\r\n      continue;\r\n    }\r\n    if (name) {\r\n      if (isFunction(value) && isReactive) {\r\n        effect(() => (prev = assign(elem, name, value(), prev)));\r\n      } else {\r\n        assign(elem, name, value, prev);\r\n      }\r\n      return prev;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function spread(\r\n  rules: AssignmentRule[],\r\n  elem: Element,\r\n  props: any,\r\n  prev: any = {}\r\n) {\r\n\r\n  if (isFunction(props)) {\r\n    effect(() => {\r\n      for (const [name, value] of Object.entries(props())) {\r\n        prev[name] = assign(rules, elem, name, value, prev[name]);\r\n      }\r\n    });\r\n  } else {\r\n    for (const [name, value] of Object.entries(props)) {\r\n      prev[name] = assign(rules, elem, name, value, prev[name]);\r\n    }\r\n  }\r\n  return prev;\r\n}\r\n\r\n","import { INode, IText, SyntaxKind, parse } from \"html5parser\";\r\nimport { insert } from \"solid-js/web\";\r\nimport { assign } from \"./assign\";\r\nimport { H } from \"./h\";\r\nimport { AssignmentRule, ComponentRegistry } from \"./types\";\r\nimport {\r\n  createComment,\r\n  doc,\r\n  isFunction,\r\n  isString,\r\n  toArray,\r\n  createElement,\r\n  flat,\r\n  getValue,\r\n  isNumber,\r\n  isArray,\r\n} from \"./util\";\r\n\r\ntype TreeNode =\r\n  | TextNode\r\n  | ComponentNode\r\n  | ElementNode\r\n  | InsertNode\r\n  | CommentNode;\r\n\r\ntype ValueParts = string | number | Array<string | number>;\r\n\r\ntype Property = [name: string, value: ValueParts];\r\n\r\nconst TEXT_NODE = 1;\r\ntype TextNode = {\r\n  type: 1;\r\n  value: string;\r\n};\r\n\r\nconst COMMENT_NODE = 2;\r\ntype CommentNode = {\r\n  type: 2;\r\n  value: string;\r\n};\r\n\r\nconst INSERT_NODE = 3;\r\ntype InsertNode = {\r\n  type: 3;\r\n  value: number;\r\n};\r\n\r\nconst COMPONENT_NODE = 4;\r\ntype ComponentNode = {\r\n  type: 4;\r\n  name: string;\r\n  props: Property[];\r\n  children: TreeNode[];\r\n  template?: HTMLTemplateElement;\r\n};\r\n\r\nconst ELEMENT_NODE = 5;\r\ntype ElementNode = {\r\n  type: 5;\r\n  name: string;\r\n  props: Property[];\r\n  children: TreeNode[];\r\n};\r\n\r\ntype RootNode = {\r\n  children: TreeNode[];\r\n  template?: HTMLTemplateElement;\r\n};\r\n\r\n//Should be unique character that would never be in the template literal\r\nconst marker = \"⧙⧘\";\r\n\r\n//Captures index of hole\r\nconst match = new RegExp(`${marker}(\\\\d+)${marker}`, \"g\");\r\n\r\nconst cache = new WeakMap<TemplateStringsArray, RootNode>();\r\nconst walker = doc.createTreeWalker(doc, 133);\r\n\r\nfunction getCachedRoot(strings: TemplateStringsArray): RootNode {\r\n  let root = cache.get(strings);\r\n  if (!root) {\r\n    //join string with markers and index\r\n    const ast = parse(\r\n      strings\r\n        .slice(1)\r\n        .reduce(\r\n          (prev, current, index) => prev + marker + index + marker + current,\r\n          strings[0]\r\n        )\r\n    );\r\n\r\n    const children = ast.flatMap((n) => parseNode(n));\r\n\r\n    const template = buildTemplate(children);\r\n    root = {\r\n      children,\r\n      template,\r\n    };\r\n    console.log(children, template);\r\n\r\n    cache.set(strings, root);\r\n  }\r\n  return root;\r\n}\r\n\r\nexport function HTML(\r\n  components: ComponentRegistry = {},\r\n  rules: AssignmentRule[] = []\r\n) {\r\n  function html(strings: TemplateStringsArray, ...values: any[]) {\r\n    const cached = getCachedRoot(strings);\r\n\r\n    function renderTemplate(\r\n      template: HTMLTemplateElement,\r\n      componentNode: ComponentNode | RootNode\r\n    ) {\r\n      const clone = template.content.cloneNode(true);\r\n      walker.currentNode = clone;\r\n      walkNodes(componentNode.children);\r\n\r\n      function walkNodes(nodes: TreeNode[]) {\r\n        for (const node of nodes) {\r\n          const domNode = walker.nextNode()!;\r\n          if (node.type === ELEMENT_NODE) {\r\n            for (const [name, parts] of node.props) {\r\n              // If static props were appplied to template, they can be skipped here\r\n              if (isString(parts)) continue;\r\n              assign(\r\n                html.h.rules,\r\n                domNode as Element,\r\n                name,\r\n                isNumber(parts)\r\n                  ? values[parts]\r\n                  : () =>\r\n                      parts\r\n                        .map((v) => (isNumber(v) ? getValue(values[v]) : v))\r\n                        .join(\"\")\r\n              );\r\n            }\r\n            walkNodes(node.children);\r\n          } else if (\r\n            node.type === INSERT_NODE ||\r\n            node.type === COMPONENT_NODE\r\n          ) {\r\n            insert(domNode.parentNode!, renderNode(node), domNode);\r\n            walker.currentNode = domNode;\r\n          }\r\n        }\r\n      }\r\n      return toArray(clone.childNodes);\r\n    }\r\n\r\n    function renderNode(node: TreeNode): any {\r\n      switch (node.type) {\r\n        case TEXT_NODE:\r\n          return node.value;\r\n        case INSERT_NODE:\r\n          return values[node.value];\r\n        case COMMENT_NODE:\r\n          return createComment(node.value);\r\n      }\r\n      const template = node.type === COMPONENT_NODE && node.template;\r\n\r\n      // gather props\r\n      const props = {} as Record<string, any>;\r\n      for (let [name, parts] of node.props) {\r\n        if (name === \"...\") {\r\n          //only static spread supported on components\r\n          Object.assign(props, values[parts as number]);\r\n        } else {\r\n          props[name] = isString(parts)\r\n            ? parts\r\n            : isNumber(parts)\r\n            ? values[parts]\r\n            : () =>\r\n                parts\r\n                  .map((v) => (isNumber(v) ? getValue(values[v]) : v))\r\n                  .join(\"\");\r\n        }\r\n      }\r\n\r\n      // children - childNodes overwrites any props.children\r\n      if (node.children.length) {\r\n        props.children = template\r\n          ? () => renderTemplate(template, node)\r\n          : () => flat(node.children.map(renderNode));\r\n      }\r\n\r\n      return html.h(node.name, props);\r\n    }\r\n\r\n    return cached.template\r\n      ? renderTemplate(cached.template, cached)\r\n      : flat(cached.children.map(renderNode));\r\n  }\r\n\r\n  html.h = H(components, rules);\r\n\r\n  return html;\r\n}\r\n\r\nfunction getValueParts(value: string = \"\"): Array<string | number> {\r\n  return value\r\n    .split(match)\r\n    .map((v, i) => (i % 2 === 1 ? Number(v) : v))\r\n    .filter((v) => !isString(v) || v.trim());\r\n}\r\n\r\n// Split by marker and extract index of hole. Remove empty strings and flatten\r\n// static: \"static text\" => \"static text\"\r\n// dynamic: \"${1}\" => 1\r\n// mixed: \"static ${0} text ${1}px\" => [\"static \",0,\" text \",1,\"px\"]\r\nfunction parseValue(value: string = \"\"): ValueParts {\r\n  const parts = getValueParts(value);\r\n  if (parts.length === 0) return \"\";\r\n  if (parts.length === 1) return parts[0];\r\n  return parts;\r\n}\r\n\r\n//Parse html5parser result for what we care about\r\nfunction parseNode(node: INode): TreeNode | TreeNode[] {\r\n  //Text nodes are either static text or holes to insert in\r\n  if (node.type === SyntaxKind.Text) {\r\n    const parts = getValueParts(node.value);\r\n    return parts.map((value) => {\r\n      const type = isString(value) ? TEXT_NODE : INSERT_NODE;\r\n      return {\r\n        type,\r\n        value,\r\n      } as InsertNode | TextNode;\r\n    });\r\n  }\r\n\r\n  //html5parser represents comments as type tag with name \"!\" or \"\"\r\n  if (node.name[0] === \"!\" || node.name === \"\") {\r\n    return {\r\n      type: COMMENT_NODE,\r\n      value: (node.body as IText[])[0].value,\r\n    } as CommentNode;\r\n  }\r\n\r\n  const props = node.attributes.map((v) => {\r\n    const name = parseValue(v.name.value);\r\n    if (isString(name)) {\r\n      return [name, parseValue(v.value?.value)] as Property;\r\n    } else if (isNumber(name)) {\r\n      //name is hole.\r\n      return [\"ref\", name] as Property;\r\n    }\r\n    //name is mixed static and dynamic. We assume something like ...${} but could also be class${} or style${}. Value gets ignored in this case.\r\n    return [name[0], name[1]];\r\n  }) as Property[];\r\n\r\n  const children = node.body?.flatMap((n) => parseNode(n)) ?? [];\r\n\r\n  //component if name starts with capital letter\r\n  if (/^[A-Z]/.test(node.rawName)) {\r\n    return {\r\n      type: COMPONENT_NODE,\r\n      name: node.rawName,\r\n      props,\r\n      children,\r\n      template: buildTemplate(children),\r\n    } as ComponentNode;\r\n  }\r\n\r\n  return {\r\n    type: ELEMENT_NODE,\r\n    name: node.name,\r\n    props,\r\n    children,\r\n  } as ElementNode;\r\n}\r\n\r\n//build template element with same exact shape as tree so they can be walked through in sync\r\nfunction buildTemplate(nodes: TreeNode[]): HTMLTemplateElement | undefined {\r\n  //Criteria for using template is component or root has at least 1 element. May be be a more optimal condition.\r\n  if (nodes.some((v) => v.type === ELEMENT_NODE)) {\r\n    const template = doc.createElement(\"template\");\r\n    buildNodes(nodes, template.content);\r\n    return template;\r\n  }\r\n}\r\n\r\nfunction buildNodes(nodes: TreeNode[], parent: Node) {\r\n  for (const node of nodes) {\r\n    switch (node.type) {\r\n      case TEXT_NODE:\r\n        parent.appendChild(doc.createTextNode(node.value));\r\n        break;\r\n      case COMMENT_NODE:\r\n        parent.appendChild(createComment(node.value));\r\n        break;\r\n      case INSERT_NODE:\r\n        parent.appendChild(createComment(\"+\"));\r\n        break;\r\n      case COMPONENT_NODE:\r\n        parent.appendChild(createComment(node.name));\r\n        break;\r\n      case ELEMENT_NODE:\r\n        const elem = createElement(node.name);\r\n        parent.appendChild(elem);\r\n        //set static attributes only\r\n        node.props.forEach(([name, value]) => {\r\n          if (isString(value)) {\r\n            elem.setAttribute(name, value);\r\n          }\r\n        });\r\n        buildNodes(node.children, elem);\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Dynamic,\r\n  ErrorBoundary,\r\n  For,\r\n  Index,\r\n  Match,\r\n  NoHydration,\r\n  Portal,\r\n  Show,\r\n  Suspense,\r\n  Switch,\r\n} from \"solid-js/web\";\r\nimport {\r\n  assignAttribute,\r\n  assignBooleanAttribute,\r\n  assignClass,\r\n  assignDelegatedEvent,\r\n  assignEvent,\r\n  assignProperty,\r\n  assignRef,\r\n  assignStyle\r\n} from \"./assign\";\r\nimport { H } from \"./h\";\r\nimport { HTML } from \"./html\";\r\nimport { AssignmentRule, ComponentRegistry } from \"./types\";\r\n\r\n\r\n\r\nexport const defaultRules: AssignmentRule[] = [\r\n  { filter: \"on:\", assign: assignEvent, isReactive: false },\r\n  { filter: \"on\", assign: assignDelegatedEvent, isReactive: false },\r\n  { filter: \"prop:\", assign: assignProperty },\r\n  { filter: \"bool:\", assign: assignBooleanAttribute },\r\n  { filter: \"attr:\", assign: assignAttribute },\r\n  { filter: \"ref:\", assign: assignRef, isReactive: false },\r\n  { filter: \"class:\", assign: assignClass },\r\n  { filter: \"style:\", assign: assignStyle },\r\n  { filter: \"@\", assign: assignDelegatedEvent, isReactive: false },\r\n  { filter: \".\", assign: assignProperty },\r\n  { filter: \"?\", assign: assignBooleanAttribute },\r\n  { filter: \"\", assign: assignAttribute } //default\r\n]\r\n\r\n\r\n\r\nexport const defaultComponents: ComponentRegistry = {\r\n  For,\r\n  Index,\r\n  Match,\r\n  Suspense,\r\n  ErrorBoundary,\r\n  Show,\r\n  Switch,\r\n  Dynamic,\r\n  Portal,\r\n  NoHydration,\r\n}\r\n\r\n\r\nexport const h = H();\r\n\r\nexport const html = HTML()\r\n//link global xml with global h\r\nhtml.h = h\r\n\r\n","import {\r\n  createComponent,\r\n  type ComponentProps,\r\n  type JSX,\r\n  type ValidComponent,\r\n} from \"solid-js\";\r\n\r\nimport { spread } from \"./assign\";\r\nimport { defaultComponents, defaultRules } from \"./defaults\";\r\n\r\nimport { createElement, doc, flat, isFunction, isString } from \"./util\";\r\nimport { SVGElements } from \"solid-js/web\";\r\nimport { AssignmentRule, MaybeFunctionProps } from \"./types\";\r\n\r\nexport function H(components: Record<string, any> = {}, rules: AssignmentRule[] = []) {\r\n\r\n  function h<T extends ValidComponent>(\r\n    component: T,\r\n    props: MaybeFunctionProps<ComponentProps<T>>,\r\n    ...children: JSX.Element[]\r\n  ): JSX.Element {\r\n    //children in spread syntax override children in props\r\n    if (children.length) {\r\n      //@ts-expect-error\r\n      props.children = flat(children)\r\n    }\r\n\r\n    if (isFunction(component)) {\r\n      return createComponent(component, wrapProps(props));\r\n    }\r\n\r\n    if (isString(component)) {\r\n      const componentFunction = (h.components)[component];\r\n      if (componentFunction) {\r\n        return createComponent(componentFunction, wrapProps(props));\r\n      }\r\n\r\n      if (/^[A-Z]/.test(component)) {\r\n        console.warn(`Forgot to define ${componentFunction}`);\r\n      }\r\n\r\n      const elem = createElement(component)\r\n      spread(h.rules, elem, props);\r\n      return elem;\r\n    }\r\n  }\r\n\r\n  h.components = { ...defaultComponents, ...components };\r\n  h.define = (components: Record<string, ValidComponent>) => {\r\n    Object.assign(h.components, components);\r\n  };\r\n  h.rules = [...rules, ...defaultRules];\r\n\r\n\r\n  return h;\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const markedOnce = new WeakSet();\r\n\r\n/**\r\n * Marks a function so it is not wrapped as a getter by h().\r\n * Useful for event handlers or functions that should not be auto-accessed.\r\n * @example\r\n * once(() => doSomething())\r\n */\r\nexport function once<T extends (...args: any[]) => any>(fn: T): T {\r\n  if (isFunction(fn)) markedOnce.add(fn);\r\n  return fn;\r\n}\r\n\r\n/**\r\n * Internal: Replaces accessor props with getters for reactivity, except for refs and event handlers.\r\n */\r\nexport function wrapProps<\r\n  TComponent extends ValidComponent,\r\n  TProps extends MaybeFunctionProps<ComponentProps<TComponent>>\r\n>(props: TProps = {} as TProps): ComponentProps<TComponent> {\r\n  for (const [key, { value }] of Object.entries(\r\n    Object.getOwnPropertyDescriptors(props)\r\n  )) {\r\n    if (isFunction(value) && value.length === 0 && !markedOnce.has(value)) {\r\n      Object.defineProperty(props, key, {\r\n        get() {\r\n          return value();\r\n        },\r\n        enumerable: true,\r\n      });\r\n    }\r\n  }\r\n  return props as ComponentProps<TComponent>;\r\n}\r\n"],"mappings":"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"}